import{parse as e}from"postcss";import t from"postcss-selector-parser";import{promises as n,constants as r}from"fs";import o from"glob";import s from"path";const c={css:[],content:[],defaultExtractor:e=>e.match(/[A-Za-z0-9_-]+/g)||[],extractors:[],fontFace:!1,keyframes:!1,rejected:!1,stdin:!1,stdout:!1,variables:!1,whitelist:[],whitelistPatterns:[],whitelistPatternsChildren:[]},i="purgecss ignore current",a="purgecss ignore",f="purgecss start ignore",u="purgecss end ignore",l="purgecss.config.js",d="Error loading the config file",p=["*","::-webkit-scrollbar","::selection",":root","::before","::after"],m=["class","id","universal","pseudo"];let y,w=!1;const h={fontFace:[],keyframes:[]},g=new Set,v=new Set,x=new Set;async function k(e=l){let t;try{const n=s.join(process.cwd(),e);t=await import(n)}catch(e){throw new Error(`${d} ${e.message}`)}return{...c,...t}}function S(e){y=e}function F(e,t){const n=new Set(t(e));return n.delete(""),n}async function j(e,t){let s=new Set;for(const c of e){let e=[];try{await n.access(c,r.F_OK),e.push(c)}catch(t){e=o.sync(c)}for(const r of e){const e=F(await n.readFile(r,"utf-8"),P(r,t));s=new Set([...s,...e])}}return s}function b(e,t){let n=new Set;for(const{raw:r,extension:o}of e){const e=F(r,P(`.${o}`,t));n=new Set([...n,...e])}return n}function P(e,t){const n=t.find(t=>t.extensions.find(t=>e.endsWith(t)));return void 0===n?y.defaultExtractor:n.extractor}async function $(e,n){const r=e.prev();if(w)return;if(r&&"comment"===r.type&&C(r,"next"))return void r.remove();if(e.parent&&"atrule"===e.parent.type&&"keyframes"===e.parent.name)return;if("rule"===e.type&&function(e){let t=!1;return e.walkComments(e=>{e&&"comment"===e.type&&e.text.includes(i)&&(t=!0,e.remove())}),t}(e))return;if("rule"!==e.type)return;let o=!0;if(e.selector=t(e=>{e.walk(e=>{if("selector"!==e.type)return;const t=function(e){const t=new Set;if(e.parent&&":not"===e.parent.value&&"pseudo"===e.parent.type)return t;for(const{type:n,value:r}of e.nodes)m.includes(n)&&void 0!==r?t.add(r):"tag"!==n||void 0===r||/[+]|n|-|(even)|(odd)|^from$|^to$|^\d/.test(r)||t.add(r);return t}(e);(o=function(e,t){for(const n of t){const t=n.replace(/\\/g,"");if(!t.startsWith(":")){if(W(t))return!0;if(!(e.has(t)||p.includes(t)||E(t)))return!1}}return!0}(n,t))||(y.rejected&&x.add(e.toString()),e.remove())})}).processSync(e.selector),o&&void 0!==e.nodes)for(const t of e.nodes){if("decl"!==t.type)continue;const{prop:e,value:n}=t;if(y.keyframes&&("animation"===e||"animation-name"===e))for(const e of n.split(/[\s,]+/))g.add(e);if(y.fontFace&&"font-family"===e)for(const e of n.split(",")){const t=z(e.trim());v.add(t)}}const s=e.parent;e.selector||e.remove(),function(e){if("rule"===e.type&&!e.selector||e.nodes&&!e.nodes.length||"atrule"===e.type&&(!e.nodes&&!e.params||!e.params&&e.nodes&&!e.nodes.length))return!0;return!1}(s)&&s.remove()}function C(e,t){switch(t){case"next":return e.text.includes(a);case"start":return e.text.includes(f);case"end":return e.text.includes(u)}}function E(e){return p.includes(e)||y.whitelist&&y.whitelist.some(t=>t===e)||y.whitelistPatterns&&y.whitelistPatterns.some(t=>t.test(e))}function W(e){return y.whitelistPatternsChildren&&y.whitelistPatternsChildren.some(t=>t.test(e))}function A(){for(const{name:e,node:t}of h.fontFace)v.has(e)||t.remove()}function _(){for(const e of h.keyframes)g.has(e.params)||e.remove()}function z(e){return e.replace(/(^["'])|(["']$)/g,"")}function K(e,t){e.walk(e=>"rule"===e.type?$(e,t):"atrule"===e.type?function(e){if(y.keyframes&&e.name.endsWith("keyframes"))h.keyframes.push(e);else if(y.fontFace&&"font-face"===e.name&&e.nodes)for(const t of e.nodes)"decl"===t.type&&"font-family"===t.prop&&h.fontFace.push({name:z(t.value),node:e})}(e):void("comment"===e.type&&(C(e,"start")?(w=!0,e.remove()):C(e,"end")&&(w=!1,e.remove()))))}export default async function(t){y="object"!=typeof t?await k(t):{...c,...t};const{content:r,css:s,extractors:i}=y,a=r.filter(e=>"string"==typeof e),f=r.filter(e=>"object"==typeof e),u=await j(a,i),l=b(f,i);return async function(t,r){const s=[],c=[];for(const e of t)"string"==typeof e?c.push(...o.sync(e)):c.push(e);for(const t of c){const o="string"==typeof t?y.stdin?t:await n.readFile(t,"utf-8"):t.raw,c=e(o);K(c,r),y.fontFace&&A(),y.keyframes&&_();const i={css:c.toString(),file:"string"==typeof t?t:void 0};"string"==typeof t&&(i.file=t),y.rejected&&(i.rejected=Array.from(x),x.clear()),s.push(i)}return s}(s,new Set([...u,...l]))}export{c as defaultOptions,j as extractSelectorsFromFiles,b as extractSelectorsFromString,A as removeUnusedFontFaces,_ as removeUnusedKeyframes,x as selectorsRemoved,k as setOptions,S as setPurgeCSSOptions,K as walkThroughCSS};
